name: Security Scans

on:
  push:
    branches:
      - main
    paths: 
      - "**/argo/**"
      - "**/helm/**"
      - ".github/workflows/**"
      - "!**/README.md"
  pull_request:
    branches:
      - main
    paths: 
      - "**/argo/**"
      - "**/helm/**"
      - ".github/workflows/**"
      - "!**/README.md"

jobs:

  security_scan:
    runs-on: ubuntu-latest
    outputs:
      image_repo_tags: ${{ steps.parse_directory.outputs.image_repo_tags }}
      dirs: ${{ steps.discover_dirs_b.outputs.dirs }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

 #   - name: Install Trivy
   #   run: |
     #   curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

   # - name: Install yq
   #  run: |
    #    wget https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -O /tmp/yq
      #  sudo chmod +x /tmp/yq
      #  sudo mv /tmp/yq /usr/local/bin/yq

    - name: Discover directories
      id: discover_dirs_b
      run: |
        dirs=$(find . -type d -exec test -f "{}/helm/values.yaml" \; -print)
        echo "dirs=${dirs}" >> $GITHUB_ENV
        echo "dirs=${dirs}" >> $GITHUB_OUTPUT
        
    - name: Parse directory
      id: parse_directory
      run: |
        for dir in ${{ steps.discover_dirs_b.outputs.dirs | tr '\n' ' ' }}; do
          image_repository=$(grep repository "$dir"/helm/values.yaml | awk -F': ' '{print $2}')
          image_tag=$(grep tag "$dir"/helm/values.yaml | awk -F': ' '{print $2}')
          image_repo_tags="${image_repo_tags}${image_repository}:${image_tag}"
        done
        echo "image_repo_tags=${image_repo_tags}" >> $GITHUB_OUTPUT


    - name: Debug `values.yaml` Files
      run: |
        for dir in ${{ steps.discover_dirs_b.outputs.dirs | tr '\n' ' ' }}; do
          echo "Content of $dir/helm/values.yaml:"
          cat "$dir/helm/values.yaml"
        done
        
    - name: Debug Image Reference
      run: |
        echo "Image: ${{ needs.security_scan.outputs.image_repo_tags }}"


   # - name: Run Trivy vulnerability scanner
    #  uses: aquasecurity/trivy-action@master
    #  with:
      #    image-ref: ${{ steps.parse_directory.outputs.image_repository }}:${{ steps.parse_directory.outputs.image_tag }}
        #  format: 'table'
        #  exit-code: '1'
       #   ignore-unfixed: true
        #  vuln-type: 'os,library'
       #   severity: 'CRITICAL,HIGH'



    # docker scan "$image_repository:$image_tag"

